// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"google.golang.org/grpc"
	"nova-factory-server/app/business/metric/device/metricController"
	"nova-factory-server/app/business/metric/device/metricDao/metricDaoIMpl"
	"nova-factory-server/app/business/metric/device/metricService/metricServiceImpl"
	"nova-factory-server/app/datasource/cache"
	"nova-factory-server/app/datasource/clickhouse"
	"nova-factory-server/app/datasource/iotdb"
	"nova-factory-server/app/routes"
)

// Injectors from wire.go:

func wireApp() (*grpc.Server, func(), error) {
	clickHouse, err := clickhouse.NewClickHouse()
	if err != nil {
		return nil, nil, err
	}
	iotDb := iotdb.NewIotDb()
	iMetricDao := metricDaoIMpl.NewMetricDaoImpl(clickHouse, iotDb)
	cacheCache := cache.NewCache()
	iMetricService := metricServiceImpl.NewIMetricServiceImpl(iMetricDao, cacheCache)
	metric := metricController.NewMetric(iMetricService)
	metricServer := &metricController.MetricServer{
		Metric: metric,
	}
	server := routes.NewGrpcEngine(metricServer)
	return server, func() {
	}, nil
}
